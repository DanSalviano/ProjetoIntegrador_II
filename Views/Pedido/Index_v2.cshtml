@model IEnumerable<PedidoViewAllModel>
@inject UserManager<UsuarioModel> _userManager

@{

    ViewBag.Subtitulo = Context.User.IsInRole("usuario") ? "Meus Pedidos" : "Acompanhar Pedidos";
    var usuario = await _userManager.GetUserAsync(Context.User);
}

<div class="d-flex justify-content-between">
    <div>
        <h3>@ViewBag.Subtitulo</h3>
    </div>
</div>
<hr />

@if (Context.User.IsInRole("usuario"))
{
    <h5>
        <span class="text-primary">
            Cliente: @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(usuario.NomeCompleto.ToLower())
        </span>
    </h5>
}
<partial name="_MensagemPartial" />


<table id="pedidoTable" class="table table-striped table-hover">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(p => p.Id)</th>
            <th>@Html.DisplayNameFor(p => p.EnderecoCompleto)</th>
            <th class="text-center">@Html.DisplayNameFor(p => p.DataDoPedido)</th>
            <th class="text-center">@Html.DisplayNameFor(p => p.FormaPagamento)</th>
            <th class="text-end">Total</th>
            <th class="text-end">Troco</th>
            <th class="text-center">Status</th>
        </tr>
    </thead>
    @if (Model.Count() > 0)
    {
        <tbody>
            @foreach (var pedido in Model)
            {
                <tr>
                    <td>
                        @pedido.Id.Substring(pedido.Id.LastIndexOf("-")+1)
                    </td>
                    <td>
                        @Html.DisplayFor(Model => pedido.EnderecoCompleto)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(model => pedido.DataDoPedido)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(model => pedido.FormaPagamento)
                    </td>
                    <td class="text-end">
                        @pedido.PedidoItens.Select(i => i.Subtotal).Sum()
                    </td>
                    <td class="text-end">
                        @Html.DisplayFor(model => pedido.Troco)
                    </td>
                    <td class="text-center">
                        <span class="badge bg-success">@Html.DisplayFor(model => pedido.Status)</span>
                    </td>
                </tr>
                <tr>
                    <td colspan="7">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Qtde</th>
                                    <th>Produto</th>
                                    <th>Conteúdo</th>
                                    <th class="text-end">Preço</th>
                                    <th class="text-end">Subtotal</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in pedido.PedidoItens)
                                {
                                    <tr>
                                        <td>@item.Quantidade</td>
                                        <td>@item.Produto.Produto</td>
                                        <td>@item.GetConteudo</td>
                                        <td class="text-end">@item.Preco</td>
                                        <td class="text-end">@item.Subtotal</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
            }
        </tbody>

    }
    else
    {
        <tbody>
            <tr>
                <td class="text-center" colspan="7"><br />Nenhum pedido encontrado.<br />&nbsp;</td>
            </tr>
        </tbody>
    }
</table>
